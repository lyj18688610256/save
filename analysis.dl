//根据程序流的深度创建任意深度的context,还差最后一步就是如何解析比如
//[[[[[nil,1],3],5],7],9] 成 [[[[nil, 3], 5], 7], 9],现在已经可以了,但是如果
//同时解析比如[[[[[nil,1],3],5],7],9],[[[[[nil,2],4],6],8],10]就不会得到正确结果,他们的结果会混
//   https://github.com/souffle-lang/souffle/issues/2064#issue-991024448

// Context-sensitive pointer analysis with context of 2 object and a
// context-sensitive heap abstraction.

#include "../../main/single-phase-analysis.dl"
#include "../../main/configuration.dl"



// For this analysis the context of a method call corresponds to the
// identity of the receiver object and the receiver object of the caller.
// Again, this may trigger creation of a new object.
.comp TwoObjectSensitivePlusHeapConfiguration_TFA : AbstractConfiguration {

  // In this analysis, the real context is a pair of Values and the real
  // heap context a single Value.


  .type List = [a:List, b:Value]
  .type HContext = [c:List]
  .type Context = [d:List]



.decl mList(l:List, index:number)
.output mList
.decl ArrayEntry(id:symbol, index:number, value:Value)
.output ArrayEntry
.decl arrayLength(x:number)
.output arrayLength
.decl newList(x:List,index:number)
.output newList

//mList([[[[nil,10],11],12],13],0).  //?hctx=[?c1],output: mList(c1)

mList(?c1,0) :-
    ContextRequest(?callerCtx, ?hctx, ?invo, ?value, ?tomethod, _),    //这里的value是Heap
    ?hctx=[?c1].

mList(?r2,?k), 
ArrayEntry("mList",?k,?b):- 
    mList(?r1,?index),?r1=[?r2,?b],
    ?k=?index+1.


arrayLength(?k) :- ?k=max ?index:ArrayEntry(?id,?index,?value).
newList(nil,?k):-
   arrayLength(?k).


newList(?r1,?k) :- 
    newList(?r,?b),
    ?k=?b-1,
    ArrayEntry("mList",?k,?value),
    ?r1=[?r,?value],
    ?k>0.

//newList(r1,0) :- newList(r,1),r1=[r,14].  //最后再加上14这个元素




  ContextResponse(?callerCtx, ?hctx, ?invo, ?value, ?tomethod, ?calleeCtx) :-
    ContextRequest(?callerCtx, ?hctx, ?invo, ?value, ?tomethod, _),    //这里的value是Heap
    newList(?r,1),
    ?calleeCtx = [[?r,?value]],
    //?calleeCtx = [?hctx,?value],
    ?tomethod = ?tomethod.

  StaticContextResponse(?callerCtx, ?invo, ?calleeCtx) :-
    StaticContextRequest(?callerCtx, ?invo),
     ?callerCtx=[?r1],?r2=[?r1],?calleeCtx=?r2.
    //?calleeCtx = ?callerCtx.

  RecordContextResponse(?ctx, ?value, ?var, ?hctx) :-  //这里的value是heap
    RecordContextRequest(?ctx, ?value, ?var), 
    ?ctx=[?r1],?r2=[?r1],?hctx=?r2.
    //?hctx = ?ctx.

  InitContextResponse(?value, ?ctx) :-
    InitContextRequest(?value),
    ?ctx = [[nil, ?value]].

  InitHContextResponse(?value, ?hctx) :-
    InitHContextRequest(?value),
    ?hctx = [[nil, ?value]].

}
